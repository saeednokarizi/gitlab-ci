#installing gitlab on local server 
#create docker-compose.yml

------------------------------
version: '3'
services:
  gitlab:
    image: gitlab/gitlab-ce:v1
    hostname: gitlab.example.com
    ports:
      - 0.0.0.0:4443:443
      - 0.0.0.0:4000:80
    volumes:
      - /srv/gitlab/config:/etc/gitlab
      - /srv/gitlab/logs:/var/log/gitlab
      - /srv/gitlab/data:/var/opt/gitlab
    restart: always
--------------------------------------
#note in this section
ports:
      - 0.0.0.0:4443:443
      - 0.0.0.0:4000:80
if use 127.0.0.1 you can not see on internet 
---------------------------
#note: you can access to this gitlab locally So if you want watch it on internet you can create domain
# i have a domain that called devopskhafan.site, and it behind of cloudflare.com 
---------------------------------------
Type	Name			Content		Proxy status	TTL
A	git			46.105.0.214	OFF		Auto
-------------------------------------
#now we install some packages and add some repo

sudo apt-get update
sudo apt install nginx
sudo apt-get install software-properties-common
sudo add-apt-repository universe
sudo add-apt-repository ppa:certbot/certbot
sudo apt-get update
sudo apt install python3-certbot-nginx
------------------------
sudo systemctl status nginx.service
-------------------------------------
# now we will generate ssl by openssl 

sudo openssl genrsa -out git.devopskhafan.site.key 2048

sudo openssl req -new -key git.devopskhafan.site.key -out git.devopskhafan.site.csr

sudo openssl x509 -req -days 365 -in /etc/ssl/certs/git.devopskhafan.site.csr -signkey /etc/ssl/private/git.devopskhafan.site.key -out /etc/ssl/certs/git.devopskhafan.site.crt
----------------------------------
# create a config for nginx on "/etc/nginx/site-available/" and put crt and key ssl on the config
# root of this domain is var/www/html
vim /etc/nginx/sites-available/gitlab

server {
    listen 8080 ssl;
    server_name git.devopskhafan.site;
    ssl_certificate /etc/ssl/certs/git.devopskhafan.site.crt;
    ssl_certificate_key /etc/ssl/private/git.devopskhafan.site.key;
    root /var/www/html;
    location / {
        proxy_pass http://localhost:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /api {
        proxy_pass http://localhost:4443;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

------------------------------------
sudo nginx -t

sudo systemctl restart nginx.service

-----------------------
# now we edit /srv/gitlab/config/gitlab.rb 
# uncomment  # external_url 'GENERATED_EXTERNAL_URL'
# in this case i use my domain 
external_url 'https://git.devopskhafan.site'
------------------------------
#after that reconfig gitlab by :
sudo docker exec gitlab gitlab-ctl reconfigure


#we need certbot to authenticate our domain and it work on port 80,443 ,but if your service works on another port you can use DNS-01 challenge

# go to cloudflare.com that domain is behind. in DNS part create two TXT record :
TYPE : TXT
Name: _acme-challenge.git
Content: "hello" # we chnge it later
--------------------
go to letsencrypt-script.sh
#!/bin/bash
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
docker run -it --rm --name letsencrypt \
    -v "${DIR}/etc/letsencrypt:/etc/letsencrypt" \
    -v "${DIR}/var/lib/letsencrypt:/var/lib/letsencrypt" \
    certbot/certbot:latest \
        certonly \
        -d $1 \
        -d *.$1 \
        --manual \
        --preferred-challenges dns \
        --server https://acme-v02.api.letsencrypt.org/directory
------------------
# run it and give your domain as a argument:

sudo ./letsencrypt_script.sh git.devopskhafan.site
#this script give 2 unique strings and replace them instead of "hello" in content in cloudflare.com
# after that you replaced them enter in script till take certificates.
#so you can also  before enter after 2 unique string check it by this command
host -t TXT _acme-challenge.git.devopskhafan.site
or check in this site
https://toolbox.googleapps.com/apps/dig/#TXT/_acme-challenge.git.devopskhafan.site
-----------
so after finishing to take certificate go to /srv/gitlab/config/gitlab.rb again and find letsencrypt: edit them

letsencrypt['enable'] = true
letsencrypt['contact_emails'] = ['saeednokarizi@gmail.com'] # This should be an array of email addresses to add as contacts
letsencrypt['auto_renew'] = true
-----------------------
#after that reconfig gitlab by :
sudo docker exec gitlab gitlab-ctl reconfigure
----------------------------------------
and then replace certificate that generate letsencrypt with ssl in nginx config
like this:
server {
    listen 8080;
    server_name git.devopskhafan.site;
    ssl_certificate /etc/letsencrypt/live/git.devopskhafan.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/git.devopskhafan.site/privkey.pem;
    root /var/www/html;
    location / {
        proxy_pass http://localhost:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /api {
        proxy_pass http://localhost:4443;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}
-------------------
in mikrotik need to create route forwarding
/ip firewall nat add chain=dstnat dst-address=46.100.52.24 protocol=tcp dst-port=8080 action=dst-nat to-address=192.168.88.228 to-port=4443(https) or 4000(http)















